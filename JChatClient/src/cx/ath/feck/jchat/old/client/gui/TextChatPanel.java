/*
 * TextChatPanel.java
 *
 * Created on April 20, 2007, 7:59 AM
 */

package cx.ath.feck.jchat.old.client.gui;

import cx.ath.feck.jchat.shared.ClientData;
import cx.ath.feck.jchat.shared.TextMessage;
import cx.ath.feck.jchat.client.ClientCore;
import cx.ath.feck.jchat.old.client.Singletons;
import java.awt.Rectangle;
import java.util.Map;
import javax.print.attribute.Attribute;
import javax.print.attribute.AttributeSet;
import javax.swing.JTextPane;
import javax.swing.SwingUtilities;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author  john
 */
public class TextChatPanel extends javax.swing.JPanel {
	
	/**
	 * Creates new form TextChatPanel
	 */
	public TextChatPanel() {
		initComponents();
		document = chatOutputTextPane.getStyledDocument();
		usernameTextStyle = document.addStyle("usernameTextStyle",null);
		StyleConstants.setBold(usernameTextStyle,true);
		clientData  = Singletons.getClientCore();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
        // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
        private void initComponents() {
                java.awt.GridBagConstraints gridBagConstraints;

                jSplitPane1 = new javax.swing.JSplitPane();
                jScrollPane1 = new javax.swing.JScrollPane();
                connectedClientsList = new javax.swing.JList();
                jPanel1 = new javax.swing.JPanel();
                chatOutputScrollPane = new javax.swing.JScrollPane();
                chatOutputTextPane = new javax.swing.JTextPane();
                chatInputField = new javax.swing.JTextField();
                sendButton = new javax.swing.JButton();

                setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

                setPreferredSize(new java.awt.Dimension(600, 200));
                jSplitPane1.setResizeWeight(0.8);
                jScrollPane1.setPreferredSize(new java.awt.Dimension(180, 130));
                jScrollPane1.setViewportView(connectedClientsList);

                jSplitPane1.setRightComponent(jScrollPane1);

                jPanel1.setLayout(new java.awt.GridBagLayout());

                chatOutputScrollPane.setAutoscrolls(true);
                chatOutputScrollPane.setPreferredSize(new java.awt.Dimension(2000, 1000));
                chatOutputTextPane.setBackground(javax.swing.UIManager.getDefaults().getColor("text"));
                chatOutputTextPane.setEditable(false);
                chatOutputScrollPane.setViewportView(chatOutputTextPane);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridwidth = 2;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                jPanel1.add(chatOutputScrollPane, gridBagConstraints);

                chatInputField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                sendTextActionPerformed(evt);
                        }
                });

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.weightx = 1.0;
                jPanel1.add(chatInputField, gridBagConstraints);

                sendButton.setText("Send");
                sendButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                sendTextActionPerformed(evt);
                        }
                });

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 1;
                jPanel1.add(sendButton, gridBagConstraints);

                jSplitPane1.setLeftComponent(jPanel1);

                add(jSplitPane1);

        }// </editor-fold>//GEN-END:initComponents
	
	private void sendTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendTextActionPerformed
		clientData.sendTextMessage(chatInputField.getText());
		chatInputField.setText(null);
	}//GEN-LAST:event_sendTextActionPerformed
	
	
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JTextField chatInputField;
        private javax.swing.JScrollPane chatOutputScrollPane;
        private javax.swing.JTextPane chatOutputTextPane;
        private javax.swing.JList connectedClientsList;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JSplitPane jSplitPane1;
        private javax.swing.JButton sendButton;
        // End of variables declaration//GEN-END:variables
	
	
	private ClientCore clientData;
	private StyledDocument document ;
	Style usernameTextStyle;
	
	/**
	 * Displays Message w/ specified username. Thread safe.
	 * @param username Owner of Message to display
	 * @param message Message to display 
	 */
	public void displayMessage(final String username,final String message) {
		SwingUtilities.invokeLater(new Runnable(){
			public void run() {
				try {
					document.insertString(document.getEndPosition().getOffset() -1,
							(document.getEndPosition().getOffset()-1 == 0 ? "" : "\n") +
							username + ": ",usernameTextStyle);
					document.insertString(document.getEndPosition().getOffset() -1,message,null);
				} catch (BadLocationException ex) {
					ex.printStackTrace();
				}
				TextChatPanel.this.chatOutputTextPane.setCaretPosition(chatOutputTextPane.getText().length());
			}
		});
		
	}
	/**
	 * Update list of other users connected to server. This function is thread safe.
	 * 
	 * @param clients Map<Integer,ClientData>, w/ the clientID as the key and the value the ClientData describing the other clientData connected to server.
	 */
	public void updateClientList(final Map<Integer,ClientData> clients){
		SwingUtilities.invokeLater(new Runnable(){
			public void run() {
				connectedClientsList.setListData(clients.values().toArray());
			}
		});
	}

}
